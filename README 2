Resumo - "Designing Machine Learning Systems: An Iterative Process for Production-Ready Applications, Chip Huyen" - Capítulo 5

Para que um modelo de Machine Learning (ML) tenha um bom desenvolvimento, é imprescindível a existência de um bom conjunto de recursos. Mesmo os modelos de última geração, podem não ter um bom desenvolvimento, se não usarem bons recursos. Os recursos podem ser extraídos automaticamente por algoritmos, utilizando aprendizagem profunda. E outros, ainda precisam ser criados manualmente, pois, segundo a autora, no tempo que o livro foi escrito, a maioria dos modelos de ML em produção ainda não utilizavam a aprendizagem profunda.
A engenharia de recursos requer conhecimento de técnicas específicas de domínio, como por exemplo o processamento de linguagem natural. Esse é um processo iterativo, mas que pode ser frágil. Essa técnica manual, por vezes pode acabar não sendo efetiva, e como solução para esse problema, aconteceu o surgimento da aprendizagem profunda. E espera-se que o modelo de ML com aprendizagem profunda, extraia bons recursos com essa técnica, pois, a partir dela grande parte da engenharia de recursos foi automatizada.
Para compreender e escolher quais informações utilizar em um modelo ou mesmo, como extrair essas informações, utiliza-se a engenharia de recursos. Por exemplo, para uma tarefa de recomendação de vídeos para um usuário, o número de recursos usados no modelo pode chegar a milhões. Já, para uma tarefa específica, por exemplo, identificar se uma transação de banco é uma fraude, faz-se necessário ter conhecimento especializado em banco e fraudes, e criar recursos úteis. 
Para tanto, muitas práticas foram desenvolvidas para simplificar o processo da engenharia de recursos e posteriormente o sucesso de um modelo de ML, a saber: manuseio de valores ausentes, dimensionamento, discretização, codificação de recursos categóricos, travessia de recursos e embeddings discretos e contínuos.
Por sua vez, o vazamento de dados são raramente abordados nos currículos de ML. E torna-se perigoso, pois podem fazer os modelos falhar de forma inesperada. E algumas das causas mais frequentes de vazamento de dados são a divisão dos dados em treinamento, validação e teste aleatoriamente. Também os dados podem ser vazados no dimensionamento antes da divisão, igualmente por meio do preenchimento de dados com estatísticas da divisão de teste, bem como pelo tratamento inadequado de duplicatas antes da divisão e também o vazamento pode ocorrer em grupo.
 Para evitar que as informações futuras vazem para o treinamento, e enganem o modelo de ML durante a fase de validação, é preciso dividir os dados por tempo e não de forma aleatória, sempre que possível. Também precisa-se de um profundo entendimento sobre a forma como os dados são coletados para detectar os tipos de vazamento. Então, é importante manter o controle das fontes de dados e entender como eles são processados e coletados para reduzir o risco dos vazamentos.
Do mesmo modo, é importante incorporar especialistas do assunto que o modelo de ML está sendo implementado e monitorar os dados durante todo o ciclo de vida de um projeto de ML. E, para avaliar se um recurso é bom ou não para um modelo é preciso considerar a importância do recurso e a generalização do recurso, que quer intuição e experiência do assunto, além do conhecimento estatístico. Portanto, projetar bons recursos é considerada uma questão complexa. No entanto, não há outra maneira de aprender a não ser por meio da experiência. Experimentar diferentes recursos e observar como eles afetam o desempenho dos modelos.
